import{j as p}from"./jsx-runtime-DEdD30eg.js";import{S as C}from"./Switch-Cj3g7p1C.js";import{r as c}from"./index-RYns6xqu.js";import"./index-DYmNCwer.js";import"./utils-BQzv5JxN.js";const u=r=>console.warn("[react-screen-wake-lock]: "+r),g=({onError:r,onRequest:t,onRelease:s}={})=>{const[i,a]=c.useState(!0),e=c.useRef(null),o=typeof window<"u"&&"wakeLock"in navigator,k=c.useCallback(async(l="screen")=>{const h=e.current!=null;if(!o)return u("Calling the `request` function has no effect, Wake Lock Screen API isn't supported");if(h)return u("Calling `request` multiple times without `release` has no effect");try{e.current=await navigator.wakeLock.request(l),e.current.onrelease=d=>{a(e.current&&e.current.released||!0),s&&s(d),e.current=null},t&&t(),a(e.current&&e.current.released||!1)}catch(d){r&&r(d)}},[o,t,r,s]),m=c.useCallback(async()=>{const l=e.current==null;if(!o)return u("Calling the `release` function has no effect, Wake Lock Screen API isn't supported");if(l)return u("Calling `release` before `request` has no effect.");e.current&&await e.current.release()},[o]);return{isSupported:o,request:k,released:i,release:m,type:e.current&&e.current.type||void 0}};function f({...r}){const{isSupported:t,released:s,request:i,release:a}=g();return p.jsx(C,{...!t&&{title:"Cook Mode is not supported"},...r,checked:!s,onCheckedChange:()=>s===!1?a():i(),disabled:!t})}f.__docgenInfo={description:"",methods:[],displayName:"CookMode"};const M={component:f},n=()=>p.jsxs("span",{className:"flex items-center gap-2",children:[p.jsx(f,{})," Cook Mode"]});n.__docgenInfo={description:"",methods:[],displayName:"Default"};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`() => <span className="flex items-center gap-2">
    <CookMode /> Cook Mode
  </span>`,...n.parameters?.docs?.source}}};const _=["Default"];export{n as Default,_ as __namedExportsOrder,M as default};
