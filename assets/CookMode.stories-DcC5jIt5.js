import{jsx as f,jsxs as C}from"react/jsx-runtime";import{S as g}from"./Switch-BTADT3So.js";import*as c from"react";import"@radix-ui/react-switch";import"./utils-B20MGt8m.js";import"clsx";import"tailwind-merge";const i=r=>console.warn("[react-screen-wake-lock]: "+r),w=({onError:r,onRequest:t,onRelease:o}={})=>{const[u,a]=c.useState(!0),e=c.useRef(null),s=typeof window<"u"&&"wakeLock"in navigator,k=c.useCallback(async(l="screen")=>{const h=e.current!=null;if(!s)return i("Calling the `request` function has no effect, Wake Lock Screen API isn't supported");if(h)return i("Calling `request` multiple times without `release` has no effect");try{e.current=await navigator.wakeLock.request(l),e.current.onrelease=d=>{a(e.current&&e.current.released||!0),o&&o(d),e.current=null},t&&t(),a(e.current&&e.current.released||!1)}catch(d){r&&r(d)}},[s,t,r,o]),m=c.useCallback(async()=>{const l=e.current==null;if(!s)return i("Calling the `release` function has no effect, Wake Lock Screen API isn't supported");if(l)return i("Calling `release` before `request` has no effect.");e.current&&await e.current.release()},[s]);return{isSupported:s,request:k,released:u,release:m,type:e.current&&e.current.type||void 0}};function p({...r}){const{isSupported:t,released:o,request:u,release:a}=w();return f(g,{...!t&&{title:"Cook Mode is not supported"},...r,checked:!o,onCheckedChange:()=>o===!1?a():u(),disabled:!t})}p.__docgenInfo={description:"",methods:[],displayName:"CookMode"};const W={component:p},n=()=>C("span",{className:"flex items-center gap-2",children:[f(p,{})," Cook Mode"]});n.__docgenInfo={description:"",methods:[],displayName:"Default"};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`() => <span className="flex items-center gap-2">
    <CookMode /> Cook Mode
  </span>`,...n.parameters?.docs?.source}}};const b=["Default"];export{n as Default,b as __namedExportsOrder,W as default};
